{"version":3,"file":"main.js","mappings":"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","sources":["webpack://capybaby/./src/scripts/tile.js","webpack://capybaby/./src/scripts/player.js","webpack://capybaby/./src/scripts/game.js","webpack://capybaby/./src/scripts/raft.js","webpack://capybaby/./src/scripts/view.js","webpack://capybaby/./src/index.js"],"sourcesContent":["class Tile {\n    constructor(x, y, color, orientation) {\n        this.x = x;\n        this.y = y;\n        this.color = color;\n        this.originalColor = color;\n        this.status = 'floating'\n        this.orientation = orientation\n    }\n\n    flash() {\n        this.color = Tile.FLASHING\n        this.status = 'flashing'\n    }\n\n    flashing() {\n        return this.color === Tile.FLASHING\n    }\n\n    sink() {\n        this.color = Tile.SUNK;\n        this.status = 'sunk'\n    }\n\n    reset() {\n        this.color = this.originalColor;\n        this.status = 'floating';\n    }\n}\n\nTile.FLASHING = 'rgba(140, 80, 20, 0.8)'\n// Tile.FLASHING = `rgba(140, 80, 20, ${Math.random() * 0.2 + 0.7})`\nTile.SUNK = '#000000'\n\nexport default Tile;","class Player {\n\n    static sprites = {\n        \n    }\n\n    constructor(canvas, context) {\n        this.status = 'alive'\n        this.width = 90;\n        this.height = 60;\n        this.startPos = [canvas.width/2 - this.width/2, canvas.height/2 - this.height/2]\n        this.pos = this.startPos\n        this.gridPos = [357, 357]\n        this.c = context;\n        this.canvas = canvas;\n        this.dx = 0;\n        this.dy = 0;\n        this.direction = 'idle';\n        this.idleDir = 'left';\n\n        this.capyLeft = new Image();\n        this.capyLeft.src = './assets/the_real_left.png';\n        this.capyRight = new Image();\n        this.capyRight.src = './assets/the_real_right.png';\n        this.capyIdle = new Image();\n        this.capyIdle.src = './assets/the_real_idle.png';\n        this.capyDown = new Image();\n        this.capyDown.src = './assets/the_real_front.png';\n        this.capyUp = new Image();\n        this.capyUp.src = './assets/the_real_back.png';\n        this.capyIdleR = new Image();\n        this.capyIdleR.src = './assets/the_real_idle_right.png';\n        this.capyStand = new Image();\n        this.capyStand.src = './assets/the_real_stand.png';\n        this.capySwim = new Image();\n        this.capySwim.src = './assets/the_real_swim.png'\n\n    }\n\n    chooseSquare(x, y) {\n        return [x, y]\n    }\n\n    printPos(frame) {\n        this.move(this.dx, this.dy)\n        let animation = Math.floor(frame / 6)\n        let sprite = this.chooseSprite()\n\n        let [x, y] = this.pos\n        this.c.fillStyle = '#000000'\n\n        if (this.direction === 'left') {\n            this.c.drawImage(sprite, 75 + (animation * 240), 0, 240, 188, x - 17, y - 25, 90, 70);\n        } else if (this.direction === 'right') {\n            this.c.drawImage(sprite, 50 + (animation * 240), 0, 240, 188, x + 20, y - 25, 90, 70);\n        } else if (this.direction === 'up') {\n            this.c.drawImage(sprite, 10 + (animation * 215), 0, 215, 215, x, y - 25, 80, 80);\n        } else if (this.direction === 'down') {\n            this.c.drawImage(sprite, 10 + (animation * 215), 0, 215, 215, x, y - 25, 80, 80);\n        } else if (this.direction === 'idle') {\n\n            if (this.idleDir === 'left') {\n                this.c.drawImage(sprite, 30 + (animation * 220), 0, 240, 188, x - 17, y - 25, 117, 91);\n            } else {\n                this.c.drawImage(sprite, 20 + (animation * 220), 0, 240, 188, x - 10, y - 25, 117, 91);\n            }\n        }\n    }\n\n    move(dx, dy) {\n        let [x, y] = this.pos;\n        if (this.gridPos[0] + dx > 0 && this.gridPos[0] + dx < 700) {\n            x += dx\n            this.gridPos[0] += dx;\n        }\n\n        if (this.gridPos[1] + dy > 0 && this.gridPos[1] + dy < 700) {\n            y += dy\n            this.gridPos[1] += dy;\n        }\n        this.pos = [x, y]\n    }\n\n    chooseSprite() {\n        if (this.direction === 'left') {\n            return this.capyLeft;\n        } else if (this.direction === 'right') {\n            return this.capyRight;\n        } else if (this.direction === 'up') {\n            return this.capyUp;\n        } else if (this.direction === 'down') {\n            return this.capyDown;\n        } else if (this.direction === 'idle') {\n            if (this.idleDir === 'left') {\n                return this.capyIdle;\n            } else {\n                return this.capyIdleR;\n            }\n        }\n    }\n\n}\n\n\n\n\nexport default Player;","import Raft from './raft'\nimport Player from './player'\n\nclass Game {\n    constructor(canvas, context) {\n        this.raft = new Raft(canvas, context)\n        this.player = new Player(canvas, context)\n        this.score = 0;\n        this.difficulty = 'medium';\n    }\n\n    survive() {\n        let x = Math.floor(this.player.gridPos[0] / 100)\n        let y = Math.floor(this.player.gridPos[1] / 100)\n        if (this.raft.grid[x][y].status !== 'sunk') return true;\n        return false;\n    }\n\n\n\n\n    \n}\n\nexport default Game;","import Tile from './tile'\n\nclass Raft {\n    constructor(canvas, context) {\n        this.grid = this.makeGrid()\n        this.size = this.getSize()\n        this.canvas = canvas\n        this.c = context\n        this.reg_pic = new Image();\n        this.reg_pic.src = './assets/minecraft_wood.png';\n        this.flashing_pic = new Image();\n        this.flashing_pic.src = './assets/flashing3.png'\n        this.reg_90 = new Image();\n        this.reg_90.src = './assets/minecraft_wood_90.png';\n        this.flashing_90 = new Image();\n        this.flashing_90.src = './assets/flashing3_90.png'\n    }\n\n\n\n    makeGrid() {\n        let grid = []\n        let color = '#5B3113'\n        let orientation = '0'\n        for (let i = 0; i < 7; i++) {\n            grid.push([])\n            for (let j = 0; j < 7; j++) {\n                grid[i].push(new Tile(i, j, color, orientation))\n                color = this.colorSwitch(color)\n                orientation = this.orientationSwitch(orientation)\n            }\n        }\n        return grid\n    }\n\n    getSize() {\n        let size = 0\n        for (let i = 0; i < this.grid.length; i++) {\n            for (let j = 0; j < this.grid[0].length; j++) {\n                size++\n            }\n        }\n        return size\n    }\n\n    flashSquares(percent) {\n        let squaresToFlash = Math.floor(this.size * (percent / 100))\n        let dimension = Math.sqrt(this.size)\n\n        while (squaresToFlash > 0) {\n            //choosing a random square to flash\n            let x = Math.floor((Math.random() * dimension))\n            let y = Math.floor((Math.random() * dimension))\n            \n            //checking if random square is already flashing (will try again if not)\n            let tile = this.grid[x][y];\n            if (!tile.flashing()) {\n                tile.flash();\n                squaresToFlash--\n            }\n        }\n        this.draw()\n    }\n\n    dropSquares() {\n        for (let i = 0; i < Math.sqrt(this.size); i++) {\n            for (let j = 0; j < Math.sqrt(this.size); j++) {\n                let tile = this.grid[i][j]\n                if (tile.status === 'flashing') {\n                    tile.sink();\n                }\n            }\n        }\n    }\n\n    resetSquares() {\n        for (let i = 0; i < Math.sqrt(this.size); i++) {\n            for (let j = 0; j < Math.sqrt(this.size); j++) {\n                let tile = this.grid[i][j]\n                tile.reset();\n            }\n        }   \n    }\n\n    draw() {\n            let tileArr = []\n            let color = undefined\n            let orientation = '0';\n            let Xadjustor = (Math.random() - 0.5) * 10;\n            let Yadjustor = (Math.random() - 0.5) * 10;\n\n\n            for (let i = 0; i < 7; i++) {\n                for (let j = 0; j < 7; j++) {\n                    tileArr.push(new Tile(i, j, color, orientation))\n                    color = this.colorSwitch(color);\n                    if (orientation === '0') {\n                        orientation = '90' \n                    } else {\n                        orientation = '0'\n                    }\n                }\n            }\n    \n            let midX = this.canvas.width / 2\n            let midY = this.canvas.height / 2\n        \n            for (let i = 0; i < Math.sqrt(this.size); i++) {\n                for (let j = 0; j < Math.sqrt(this.size); j++) {\n                    let tile = this.grid[i][j]\n                    tile.windowX = midX - 350 + (100 * i);\n                    tile.windowY = midY - 350 + (100 * j);\n                    if (tile.status !== 'sunk') {\n                        this.c.fillStyle = tile.color;\n\n                        if (tile.orientation === '0') {\n                            if (tile.status === 'floating') {\n                                this.c.drawImage(this.reg_pic, (tile.x * 100) + midX - 350, (tile.y * 100) + midY - 350, 100, 100)\n                            } else {\n                                this.c.drawImage(this.flashing_pic, (tile.x * 100) + midX - 350 + Xadjustor, (tile.y * 100) + midY - 350 + Yadjustor, 100, 100)\n                            }\n                        } else {\n                            if (tile.status === 'floating') {\n                                this.c.drawImage(this.reg_90, (tile.x * 100) + midX - 350, (tile.y * 100) + midY - 350, 100, 100)\n                            } else {\n                                this.c.drawImage(this.flashing_90, (tile.x * 100) + midX - 350 + Xadjustor, (tile.y * 100) + midY - 350 + Yadjustor, 100, 100)\n                            }\n                        }\n                    }\n                }\n            }\n    }\n\n    // colorSwitch(color) {\n    //     if (color === '#A46233') {\n    //         return \"#8B4513\"\n    //     } else {\n    //         return '#A46233'\n    //     }\n    // }\n\n    colorSwitch(color) {\n        if (color === '#693816') {\n            return \"#5B3113\"\n        } else {\n            return '#693816'\n        }\n    }\n\n    orientationSwitch(orientation) {\n        if (orientation === '0') {\n            return '90'\n        } else {\n            return '0'\n        }\n    }\n\n\n}\n\nexport default Raft;","import Tile from './tile'\nimport Game from './game'\n\nclass View {\n    constructor(canvas, context, game) {\n        this.canvas = canvas\n        // this.canvas.width = window.innerWidth;\n        // this.canvas.height = window.innerHeight;\n        this.c = context\n        this.startX = (this.canvas.width / 2) - 250;\n        this.startY = (this.canvas.height / 2) - 250;\n        this.game = game\n        this.background = new Image();\n        this.background.src = './assets/pokemon_sea.png';\n        this.frame = 0;\n        this.moveFrame = 0;\n        this.startFrame = 0;\n        this.timer = 935;\n        this.counter = 3;\n        this.speed = 7;\n        this.started = false;\n        this.velocity = 1.5;\n        this.origVel = this.velocity;\n        this.dy = 0;\n        this.gravity = 0.08;\n        this.fps = 90;\n        this.randStart = Math.random() * this.canvas.height * 0.8 + (0.1 * this.canvas.height)\n\n        document.addEventListener('keydown', event => {\n            if (event.key === 'ArrowUp') {\n                this.game.player.dy = -this.speed;\n                if (this.game.player.dx === 0) {\n                    this.game.player.direction = 'up'\n                }\n            } else if (event.key === 'ArrowRight') {\n                this.game.player.dx = this.speed;\n                this.game.player.direction = 'right'\n                this.game.player.idleDir = 'right'\n            } else if (event.key === 'ArrowDown') {\n                this.game.player.dy = this.speed;\n                if (this.game.player.dx === 0) {\n                    this.game.player.direction = 'down'\n                }\n            } else if (event.key === 'ArrowLeft') {\n                this.game.player.dx = -this.speed;\n                this.game.player.direction = 'left'\n                this.game.player.idleDir = 'left'\n            }\n        })\n\n        document.addEventListener('keyup', event => {\n            if (event.key === 'ArrowUp') {\n                if (this.game.player.dy === -this.speed) {\n                    this.game.player.dy = 0;\n                    if (this.game.player.dx === 0) {\n                        this.game.player.direction = 'idle';\n                    }\n                }\n        \n            } else if (event.key === 'ArrowRight') {\n                if (this.game.player.dx === this.speed) {\n                    this.game.player.dx = 0;\n                    if (this.game.player.dy === 0) {\n                        this.game.player.direction = 'idle';\n                    } else if (this.game.player.dy > 0) {\n                        this.game.player.direction = 'down'\n                    } else {\n                        this.game.player.direction = 'up'\n                    }\n                }\n        \n            } else if (event.key === 'ArrowDown') {\n                if (game.player.dy === this.speed) {\n                    game.player.dy = 0;\n                    if (game.player.dx === 0) {\n                        game.player.direction = 'idle';\n                    }\n                }\n        \n            } else if (event.key === 'ArrowLeft') {\n                if (game.player.dx === -this.speed) {\n                    game.player.dx = 0;\n                            \n                    if (game.player.dy === 0) {\n                        game.player.direction = 'idle';\n                    } else if (game.player.dy > 0) {\n                        game.player.direction = 'down'\n                    } else {\n                        game.player.direction = 'up'\n                    }\n        \n                }\n            }\n        })\n\n    }\n\n    animate() {\n        // set up animation to render new frames\n        this.c.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        // load background image\n        // this.c.drawImage(this.background, 0, 0,);\n        this.drawBackground(this.frame)\n        \n        this.game.raft.draw();\n        this.game.player.printPos(this.moveFrame);\n        this.scoreboard();\n        this.frame += 1\n        if (this.moveFrame >= 29) {\n            this.moveFrame = 0;\n        } else {\n            this.moveFrame++\n        }\n\n        if (this.game.survive()) {\n            setTimeout(() => {\n                requestAnimationFrame(this.animate.bind(this));\n            }, 1000 / this.fps)\n        } else {\n            this.gameOver();\n            clearInterval(this.interval)\n            document.addEventListener('click', this.restartGame.bind(this), {once: true})\n        }\n\n    }\n\n\n    start() {\n        setTimeout(() => {\n            this.c.drawImage(this.background, 0, 0, 2000, 1000, 0, 0, this.canvas.width, this.canvas.height);\n\n            // this.c.fillStyle = 'rgba(0, 0, 0, 1)'\n            // this.c.fillRect(this.canvas.width / 2 - 150, this.canvas.height / 2 - 350, 300, 100)\n            this.c.fillStyle = 'rgba(255, 255, 255, 1)'\n            this.c.font = '30px sans serif'\n            // this.c.fillText('CapyBaby', this.canvas.width / 2 - 65, this.canvas.height / 2 - 290)\n            this.swimFrames = 0;\n            this.animateStart();\n        }, 100)\n\n        document.addEventListener('keydown', () => {\n            this.started = true;\n            this.c.drawImage(this.background, 0, 0)\n            let falling;\n            let sitFrames = 0;\n            let two;\n            let one;\n            let stop1 = false;\n            let stop2 = false;\n            setTimeout(() => {\n                this.c.fillStyle = 'rgba(255, 255, 255, 1)'\n                this.c.font = '300px sans serif'\n                let startPosition = [this.canvas.width / 2 - 60, 0]\n                \n                falling = setInterval(() => {\n                    this.c.drawImage(this.background, 0, 0)\n                    this.game.raft.draw();\n                    this.c.fillStyle = 'rgba(255, 255, 255, 1)'\n                    this.c.fillText('3', this.canvas.width / 2 - 340, this.canvas.height / 2 - 120)\n\n                    if (stop1 === true) {\n                        this.c.fillText('2', this.canvas.width / 2 - 65, this.canvas.height / 2 - 120)\n                    }\n\n                    if (stop2 === true) {\n                        this.c.fillText('1', this.canvas.width / 2 + 210, this.canvas.height / 2 - 120);\n                    }\n                    \n\n                    if (startPosition[1] <= this.canvas.height / 2 - 50) {\n                        this.c.drawImage(this.game.player.capyIdle, 30, 0, 240, 188, startPosition[0], startPosition[1], 117, 91)\n                        startPosition[1] += 5\n                    } else if (sitFrames <= 49){\n                        let modFrames = Math.floor((sitFrames / 10) % 50)\n                        this.c.drawImage(this.game.player.capyStand, 1200 - (modFrames * 305), 0, 305, 188, startPosition[0], startPosition[1], 100, 80)\n                        sitFrames += 1\n                    } else if (sitFrames <= 99) {\n                        this.c.drawImage(this.game.player.capyStand, 0, 0, 305, 188, startPosition[0], startPosition[1], 100, 80)\n                        sitFrames += 1\n                    } else if (sitFrames <= 149) {\n                        let modFrames = Math.floor((sitFrames / 10) % 5)\n                        this.c.drawImage(this.game.player.capyStand, (modFrames * 305), 0, 305, 188, startPosition[0], startPosition[1], 100, 80)\n                        sitFrames++\n                    } else {\n                        // this.c.drawImage(this.game.player.capyStand, 1200, 0, 305, 188, startPosition[0], startPosition[1], 100, 80)\n                        // this.c.drawImage(this.game.player.capyIdle, 1200, 0, 305, 188, startPosition[0], startPosition[1], 100, 80)\n                        this.c.drawImage(this.game.player.capyIdle, 30, 0, 240, 188, startPosition[0], startPosition[1], 117, 91);\n                        \n                    }\n                }, 1000 / this.fps)\n            }, 200)\n\n            setTimeout(() => {\n                this.c.font = '300px sans serif'\n                stop1 = true;\n            }, 1135)\n\n            setTimeout(() => {\n                this.c.font = '300px sans serif'\n                stop2 = true;\n            }, 2070)\n            \n            setTimeout(() => {\n                this.interval = setInterval(this.cycle.bind(this), this.timer)\n                window.clearInterval(falling);\n                window.clearInterval(two);\n                this.game.player.idleDir = 'left';\n                requestAnimationFrame(this.animate.bind(this))\n            }, 3005)\n        }, {once: true})\n    }\n\n    loop() {\n        let counter = 0;\n        setInterval(() => {\n            if (counter % 3 === 0) {\n                this.game.raft.flashSquares(80);\n            } else if (counter % 3 === 1) {\n                this.game.raft.dropSquares();\n            } else {\n                this.game.raft.resetSquares();\n                this.game.score += 100;\n            }\n            counter++\n        }, 1200)\n    }\n\n    scoreboard() {\n        this.c.fillStyle = 'rgba(100, 100, 100, .6)'\n        this.c.fillRect(0, 0, 230, 40)\n        this.c.font = '30px bradley hand'\n        this.c.fillStyle = '#FFFFFF'\n        this.c.fillText(`SCORE:      ${this.game.score}`, 0, 30)\n    }\n\n    drawBackground(frame) {\n        let increment = Math.floor(frame / 20)\n        if (increment % 4 === 3) {\n            this.c.drawImage(this.background, 0, 0, 2000, 1000, 0, 0, this.canvas.width, this.canvas.height);\n        } else if (increment % 4 === 2) {\n            this.c.drawImage(this.background, 50, 10, 2000, 1000, 0, 0, this.canvas.width, this.canvas.height);\n        } else if (increment % 4 === 1) {\n            this.c.drawImage(this.background, 100, 0, 2000, 1000, 0, 0, this.canvas.width, this.canvas.height);\n        } else {\n            this.c.drawImage(this.background, 150, 10, 2000, 1000, 0, 0, this.canvas.width, this.canvas.height);\n        }\n    }\n\n    restartGame() {\n        // document.removeEventListener('click', this.restartGame.bind(this))\n        // this.c.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        let new_game = new Game(this.canvas, this.c);\n        new View(this.canvas, this.c, new_game).start();\n    }\n\n    cycle() { \n        if (this.counter % 3 === 0) {\n            if (this.counter <= 6) {\n                this.game.raft.flashSquares(40);\n            } else if (this.counter <= 12) {\n                this.game.raft.flashSquares(60);\n            } else if (this.counter <= 18) {\n                this.game.raft.flashSquares(75);\n            } else if (this.counter <= 24) {\n                this.game.raft.flashSquares(82);\n            } else if (this.counter <= 30) {\n                this.game.raft.flashSquares(86);\n            } else if (this.counter <= 39) {\n                this.game.raft.flashSquares(90);\n            } else if (this.counter <= 48) {\n                this.game.raft.flashSquares(92);\n            } else if (this.counter <= 57) {\n                this.game.raft.flashSquares(95);\n            } else if (this.counter <= 66) {\n                this.game.raft.flashSquares(97);\n            } else {\n                this.game.raft.flashSquares(98);\n            }\n            // this.game.raft.flashSquares(50 + this.counter);\n        } else if (this.counter % 3 === 1) {\n            this.game.raft.dropSquares();\n        } else {\n            this.game.raft.resetSquares();\n            this.game.score += 100;\n        }\n        this.counter++\n    }\n\n    instructions(yAdjustor) {\n        this.c.font = '30px bradley hand'\n        this.c.fillText('Press any key to start!', this.canvas.width / 2 - 140, this.canvas.height / 2 + 30 - yAdjustor);\n    }\n\n    gameOver() {\n        this.c.fillStyle = 'rgba(0, 0, 0, 0.7)'\n            this.c.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            this.c.fillStyle = 'rgba(255, 255, 255, 1)'\n            this.c.fillText('Game Over', this.canvas.width / 2 - 75, this.canvas.height / 2 - 200)\n            this.c.fillText('Final Score', this.canvas.width / 2 - 78, this.canvas.height / 2)\n            this.c.fillText(`${this.game.score}`, this.canvas.width / 2 - 25, this.canvas.height / 2 + 50)\n            this.c.fillText('click to restart', this.canvas.width / 2 - 100, this.canvas.height / 2 + 200)\n    }\n\n\n    animateStart() {\n        this.c.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        if (this.dy >= 0) {\n            this.dy += this.velocity;\n            this.velocity -= this.gravity;\n        } else {\n            this.velocity = this.origVel;\n            this.dy = 0;\n        }\n        \n        this.drawBackground(Math.floor(this.startFrame / 2));\n        this.instructions(this.dy);\n        \n        let animationFrames = Math.floor((this.swimFrames / 10) % 5)\n        this.c.drawImage(this.game.player.capySwim, 20 + (animationFrames * 270), 0, 270, 140, (this.canvas.width - this.swimFrames * 4), this.randStart, 117, 61);\n\n        if (this.swimFrames < this.canvas.width * 0.3) {\n            this.swimFrames++;\n        } else {\n            this.swimFrames = 0\n            this.randStart = Math.random() * this.canvas.height * 0.8 + (0.1 * this.canvas.height);\n        }\n\n\n        this.startFrame++\n        if (this.started === false) {\n            setTimeout(() => {\n                requestAnimationFrame(this.animateStart.bind(this));\n            }, 1000 / this.fps)\n        } else {\n            this.c.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.drawBackground(Math.floor(this.startFrame / 2));\n            this.game.raft.draw();\n        }\n    }\n\n\n}\n\n\n\nexport default View;\n\n\n\n/// testtttttttt","import View from \"./scripts/view\"\nimport Raft from \"./scripts/raft\"\nimport Player from \"./scripts/player\"\nimport Game from \"./scripts/game\"\n\nconst canvas = document.querySelector('canvas')\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight - 50;\n\nconst context = canvas.getContext('2d');\n\n\nconst game = new Game(canvas, context);\nnew View(canvas, context, game).start();\n\n//creating game loop\n\nconst audio = document.createElement('audio')\naudio.src=\"./assets/sans_trim.mp3.mov\"\n\nlet playing = false;\n\ndocument.addEventListener('keydown', () => {\n    if (playing === false) {\n        audio.play();\n        audio.loop = true;\n        playing = true;\n    }}, {once: true})\n\nlet playButton = document.querySelector('#sound')\n\nplayButton.addEventListener('click', () => {\n    if (playing === true) {\n        audio.pause();\n        playing = false;\n        playButton.setAttribute('src', './assets/sound_off.png')\n    } else {\n        audio.play();\n        playing = true;\n        playButton.setAttribute('src', './assets/sound_on.png')\n    }\n})\n\nlet modal = document.getElementById('myModal')\nlet btn = document.getElementById('myBtn')\nlet span = document.getElementsByClassName('close')[0]\n\n\nmodal.addEventListener('click', (event) => {\n    modal.style.display = 'none';\n})\n\nbtn.onclick = function() {\n    modal.style.display = 'block';\n}\n\nspan.onclick = function() {\n    modal.style.display = 'none'\n}"],"names":["Tile","constructor","x","y","color","orientation","this","originalColor","status","flash","FLASHING","flashing","sink","SUNK","reset","Player","canvas","context","width","height","startPos","pos","gridPos","c","dx","dy","direction","idleDir","capyLeft","Image","src","capyRight","capyIdle","capyDown","capyUp","capyIdleR","capyStand","capySwim","chooseSquare","printPos","frame","move","animation","Math","floor","sprite","chooseSprite","fillStyle","drawImage","raft","grid","makeGrid","size","getSize","reg_pic","flashing_pic","reg_90","flashing_90","i","push","j","colorSwitch","orientationSwitch","length","flashSquares","percent","squaresToFlash","dimension","sqrt","random","tile","draw","dropSquares","resetSquares","tileArr","Xadjustor","Yadjustor","midX","midY","windowX","windowY","player","score","difficulty","survive","View","game","startX","startY","background","moveFrame","startFrame","timer","counter","speed","started","velocity","origVel","gravity","fps","randStart","document","addEventListener","event","key","animate","clearRect","drawBackground","scoreboard","setTimeout","requestAnimationFrame","bind","gameOver","clearInterval","interval","restartGame","once","start","font","swimFrames","animateStart","falling","sitFrames","stop1","stop2","startPosition","setInterval","fillText","modFrames","cycle","window","two","loop","fillRect","increment","new_game","Game","instructions","yAdjustor","animationFrames","querySelector","innerWidth","innerHeight","getContext","audio","createElement","playing","play","playButton","pause","setAttribute","modal","getElementById","btn","span","getElementsByClassName","style","display","onclick"],"sourceRoot":""}